
name: CI/CD to Production

on:
  push:
    branches:
      - master
      - release/**
      - hotfix/**
  pull_request:
    branches:
      - master
      - release/**
      - hotfix/**

env:
  CONFIGURATION: "Release"
  ALLOW_PUSH_PACKAGES: "${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}"
  VARIABLES_DIR: "src\\malone.Core\\bin\\Release\\Variables"
  NUGET_ARTIFACTS_DIR: "${{ github.workspace }}\\nuget-artifacts"
  
jobs:
  build-and-pack:
      name: Build & Pack
      runs-on: windows-latest
      environment: production
      
      outputs:
        version_number: ${{ steps.version_number.outputs.version_number }}

      steps:
      - uses: actions/checkout@v1
      - uses: ./.github/actions/build
        with:
              configuration: "${env:CONFIGURATION}"
              variables_dir: "${env:VARIABLES_DIR}"
              solution_path: 'src\malone.Core.sln'
              artifacts_path: "${env:NUGET_ARTIFACTS_DIR}"
              allow_push: ${env:ALLOW_PUSH_PACKAGES}
              token: ${{ secrets.GITHUB_TOKEN }}
           
      #- name: Version Number
      #  id: version_number
      #  run: |
      #        $version = (Get-Content ${env:VARIABLES_DIR} | Out-String |ConvertFrom-Json).MALONE_CORE_VER
      #        echo "MALONE_CORE_VER=$version"
      #        echo "::set-output name=version_number::$version"
    
  deploy:
      name: Deploy
      runs-on: windows-latest
      environment: development
      needs: build-and-pack
      
      steps: 
      - uses: actions/checkout@v1
      - uses: ./.github/actions/deploy
        with:
              artifacts_path: ${env:NUGET_ARTIFACTS_DIR}
              allow_push: ${env:ALLOW_PUSH_PACKAGES}
              token: ${{ secrets.GITHUB_TOKEN }}

  create-release:            
        name: Create Release
        runs-on: windows-latest
        environment: development

        steps:
            - name: Create Release
              uses: actions/create-release@v1
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
              with:
                tag_name: v${{needs.build-and-pack.outputs.version_number}}
                release_name: v${{ needs.build-and-pack.outputs.version_number }}
                draft: false
                prerelease: false