# This is a basic workflow to help you get started with Actions

name: CI/CD to Development

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the development branch
on:
  push:
    branches:
      - development
      - feature/**
  pull_request:
    # Sequence of patterns matched against refs/heads
    branches:
      - development

env:
  CONFIGURATION: "Debug"
  ALLOW_PUSH_PACKAGES: "${{ github.event_name == 'push' && github.ref == 'refs/heads/development' }}"
  VARIABLES_DIR: 'src\malone.Core\bin\${env:CONFIGURATION}\Variables'
  NUGET_ARTIFACTS_DIR: ${{ github.workspace }}\nuget-artifacts
  
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build-and-pack:
      name: Build & Pack
      runs-on: windows-latest
      environment: development
      
      outputs:
        version_number: ${{ steps.version_number.outputs.version_number }}

     # Steps represent a sequence of tasks that will be executed as part of the job
      steps:
      - uses: actions/checkout@v1
      - uses: ./.github/actions/build
        with:
              branch: ${{ github.ref_name }}
              configuration: ${env:CONFIGURATION}
              soluntion_path: 'src\malone.Core.sln'
              artifacts_path: ${ env:NUGET_ARTIFACTS_DIR }
              allow_push: ${ env:ALLOW_PUSH_PACKAGES }
           
      - name: Version Number
        id: version_number
        run: |
              $version = (Get-Content ${env:VARIABLES_DIR} | Out-String |ConvertFrom-Json).MALONE_CORE_VER
              echo "MALONE_CORE_VER=$version"
              echo "::set-output name=version_number::$version"
    
  deploy:
      name: Deploy
      runs-on: windows-latest
      environment: development
      needs: build-and-pack
      
      # Steps represent a sequence of tasks that will be executed as part of the job
      steps: 
      - uses: actions/checkout@v1
      - uses: ./.github/actions/deploy
        with:
              branch: ${{ github.ref_name }}
              configuration: ${env:CONFIGURATION}
              artifacts_path: ${ env:NUGET_ARTIFACTS_DIR }
              allow_push: ${ env:ALLOW_PUSH_PACKAGES }
