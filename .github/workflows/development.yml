# This is a basic workflow to help you get started with Actions

name: CI/CD to Development

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the development branch
on:
  push:
    branches:
      - development
      - feature/**
  pull_request:
    # Sequence of patterns matched against refs/heads
    branches:
      - development

env:
  CONFIGURATION: "Debug"
  ALLOW_PUSH_PACKAGES: "${{ github.event_name == 'push' && github.ref == 'refs/heads/development' }}"
  NUGET_PACKAGES_DIR: ${{ github.workspace }}/artifacts-nuget-packages
  
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build-and-pack:
      name: Build & Pack
      
      # The type of runner that the job will run on
      runs-on: windows-latest
      
      outputs:
        version_number: ${{ steps.version_number.outputs.version_number }}

     # Steps represent a sequence of tasks that will be executed as part of the job
      steps:

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      # Steps represent a sequence of tasks that will be executed as part of the job
      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1.1

      - name: Setup NuGet
        uses: NuGet/setup-nuget@v1.0.5

      - name: Add GitHub Source
        run: nuget sources add -name "github" -Source https://nuget.pkg.github.com/malonejv/index.json -Username malonejv -Password ${{ secrets.GITHUB_TOKEN }}
          
      - name: Nuget Restore Core Packages
        run:  nuget restore src/malone.Core.sln
        
      - name: Build malone.Core
        run: msbuild src/malone.Core.sln /t:Build /p:Configuration=${env:CONFIGURATION} -verbosity:detailed
              
      - name: Version Number
        id: version_number
        run: |
              $version = (Get-Content src/malone.Core/bin/${env:CONFIGURATION}/Variables | Out-String |ConvertFrom-Json).MALONE_CORE_VER
              echo "MALONE_CORE_VER=$version"
              echo "::set-output name=version_number::$version"

      - name: Prepare Packages
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/development'}} 
        run:
             |
              $projects = .\Get-ProjectsInSolution.ps1 src/malone.Core.sln -Type NonTestProjects
              $projects | foreach{ nuget pack $_.FullName  -Properties Configuration=${env:CONFIGURATION} -Suffix dev -IncludeReferencedProjects -Symbols -SymbolPackageFormat snupkg -OutputDirectory ${{ env.NUGET_PACKAGES_DIR }} }
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: nuget-packages
          path: ${{ env.NUGET_PACKAGES_DIR }}/*
          if-no-files-found: error
          retention-days: 10

  deploy:
      name: Deploy
      needs: build-and-pack
      if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/development'}}
      
      # The type of runner that the job will run on
      runs-on: windows-latest

      # Steps represent a sequence of tasks that will be executed as part of the job
      steps: 

      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
            name: nuget-packages
            path: ${{ env.NUGET_PACKAGES_DIR }}

      - name: "Pushing Nuget Packages"
        run: | 
              nuget push *-dev.nupkg -SkipDuplicate -source "github"
              nuget push *-dev.snupkg -SkipDuplicate -source "github"
